#
# ruff.toml
#
["ruff.toml"]
#target-version = "py312"
line-length = 120

["ruff.toml".lint.isort]
case-sensitive = true
force-wrap-aliases = true
combine-as-imports = true
extra-standard-library = ["path"]
known-third-party = ['django']
known-first-party = ['hope_*']
# known-local-folder = [""]
no-sections = false
lines-after-imports = 1
relative-imports-order = "furthest-to-closest"
section-order = ["future", "standard-library", "third-party", "first-party",  "local-folder",]

["ruff.toml".lint]
# "A", ## prevent using keywords that clobber python builtins
select = [
    "A", ## prevent using keywords that clobber python builtins
    "B", # bugbear: security warnings
    "BLE", # blind exceptions
    "C4", # flake8-comprehensions
    "C90", # McCabe complexity
    "D", # pydocstyle
    "DJ", # flake8-django
    "E", # pycodestylex
    "E4", "E7", "E9",
    "ERA", # eradicate
    "F", # pyflakes
    "FURB", # refurb
    "I", # isort
    "ISC", # implicit string concatenation
    "PERF", # perflint
    "PIE", # flake8-pie
    "PL", # PyLint
    "S", # bandit,
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "UP", # pyupgrade
]
extend-select = [
    "UP", # pyupgrade
]

ignore = [
    "B904",  # raise-without-from-inside-except: syntax not compatible with py2
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", #  Missing docstring in public method
    "D103", #  Missing docstring in public function
    "D104", #  Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in `__init__`
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D213", # multi-line-summary-second-line
    "E731",  # lambda-assignment: lambdas are substential in maintenance of py2/3 codebase
    "ISC001",  # conflicts with ruff format command
    "RUF005",  # collection-literal-concatenation: syntax not compatible with py2
    "RUF012", # mutable-class-default: typing is not available for py2
    "I001", # unsorted imports https://docs.astral.sh/ruff/rules/unsorted-imports/#unsorted-imports-i001
    "UP037" # [*] Remove quotes from type annotation
]

["ruff.toml".lint.per-file-ignores]
"tests/**.py" = ["S101", "PLR2004", "S"]

["ruff.toml".format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
